{"version":3,"sources":["../src/apis/customFetch.ts","../src/apis/checkAccess.ts","../src/apis/requestAccess.ts"],"names":["customFetch","apiKey","path","request","constructUrl","response","checkAiPayAccess","__async","error","requestAiPayAccess"],"mappings":"kJAGO,SAASA,EACdC,EACAC,EACAC,EAC4D,CAC5D,OAAO,MAAMC,EAAaF,CAAI,EAAG,CAC/B,OAAQ,OACR,QAAS,CACP,cAAiB,UAAUD,CAAM,GACjC,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAUE,CAAO,CAC9B,CAAC,EAAE,KAAME,GAAaA,EAAS,KAAK,CAAC,CACvC,CCXA,SAAsBC,EAAiBL,EAAgBE,EAAwE,QAAAI,EAAA,sBAC7H,GAAI,CACF,OAAO,MAAMP,EAAYC,EAAQ,oBAAqBE,CAAO,CAC/D,OAASK,EAAO,CACd,MAAO,CACL,MAAO,yBACP,WAAYA,aAAiB,MAAQA,EAAM,QAAU,MACvD,CACF,CACF,GCPA,SAAsBC,EAAmBR,EAAgBE,EAA4E,QAAAI,EAAA,sBACnI,GAAI,CACF,OAAO,MAAMP,EAAYC,EAAQ,sBAAuBE,CAAO,CACjE,OAASK,EAAO,CACd,MAAO,CACL,MAAO,2BACP,WAAYA,aAAiB,MAAQA,EAAM,QAAU,MACvD,CACF,CACF","sourcesContent":["import { ApiResponse, PathToRequestResponse } from \"@/models\";\nimport { constructUrl } from \"@/utils/url\";\n\nexport function customFetch<T extends keyof PathToRequestResponse>(\n  apiKey: string,\n  path: T,\n  request: PathToRequestResponse[T][\"request\"],\n): Promise<ApiResponse<PathToRequestResponse[T][\"response\"]>> {\n  return fetch(constructUrl(path), {\n    method: \"POST\",\n    headers: {\n      \"Authorization\": `Bearer ${apiKey}`,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(request),\n  }).then((response) => response.json());\n}\n","import {\n  ApiResponse, CheckAccessRequest, CheckAccessResponse\n} from \"@/models\";\nimport { customFetch } from \"./customFetch\";\n\nexport async function checkAiPayAccess(apiKey: string, request: CheckAccessRequest): Promise<ApiResponse<CheckAccessResponse>> {\n  try {\n    return await customFetch(apiKey, \"/api/access/check\", request);\n  } catch (error) {\n    return {\n      error: \"Failed to check access\",\n      debugError: error instanceof Error ? error.message : undefined,\n    };\n  }\n}\n","import {\n  ApiResponse,\n  RequestAccessRequest,\n  RequestAccessResponse\n} from \"@/models\";\nimport { customFetch } from \"./customFetch\";\n\nexport async function requestAiPayAccess(apiKey: string, request: RequestAccessRequest): Promise<ApiResponse<RequestAccessResponse>> {\n  try {\n    return await customFetch(apiKey, \"/api/access/request\", request);\n  } catch (error) {\n    return {\n      error: \"Failed to request access\",\n      debugError: error instanceof Error ? error.message : undefined,\n    };\n  }\n}\n"]}