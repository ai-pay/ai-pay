{"version":3,"sources":["../src/api/fetch.ts","../src/api/checkAccess.ts","../src/api/imageGeneration.ts"],"names":["typedFetch","apiKey","request","path","error","checkAccess","imageGeneration"],"mappings":"AAEA,eAAsBA,EACpBC,EACAC,EACAC,EAC4C,CAC5C,GAAI,CAWF,OAViB,MAAM,MAAM,yBAAyBA,CAAI,GAAI,CAC5D,OAAQ,OACR,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAUF,CAAM,EACnC,EACA,MAAO,WACP,KAAM,KAAK,UAAUC,CAAO,CAC9B,CAAC,GAEe,KAAK,CACvB,OAASE,EAAO,CACd,MAAO,CACL,QAAS,GACT,YAAa,cACb,aAAeA,EAA8B,OAC/C,CACF,CACF,CCvBO,SAASC,EACdJ,EACAC,EACA,CACA,OAAOF,EAAWC,EAAQC,EAAS,eAAe,CACpD,CCLO,SAASI,EACdL,EACAC,EACA,CACA,OAAOF,EAAWC,EAAQC,EAAS,sBAAsB,CAC3D","sourcesContent":["import { PathToObjectMapper } from \"@/models\";\n\nexport async function typedFetch<P extends keyof PathToObjectMapper>(\n  apiKey: string,\n  request: PathToObjectMapper[P][\"request\"],\n  path: P,\n): Promise<PathToObjectMapper[P][\"response\"]> {\n  try {\n    const response = await fetch(`https://api.ai-pay.dev${path}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${apiKey}`,\n      },\n      cache: \"no-cache\",\n      body: JSON.stringify(request),\n    });\n\n    return response.json() as Promise<PathToObjectMapper[P][\"response\"]>;\n  } catch (error) {\n    return {\n      success: false,\n      errorReason: \"FETCH_ERROR\",\n      debugMessage: (error as { message: string }).message,\n    };\n  }\n}\n","import { CheckAccessRequest } from \"@/request-response/checkAccess\";\nimport { typedFetch } from \"./fetch\";\n\nexport function checkAccess(\n  apiKey: string,\n  request: CheckAccessRequest,\n) {\n  return typedFetch(apiKey, request, \"/check-access\");\n}\n","import { ImageGenerationRequest } from \"@/models\";\nimport { typedFetch } from \"./fetch\";\n\nexport function imageGeneration(\n  apiKey: string,\n  request: ImageGenerationRequest,\n) {\n  return typedFetch(apiKey, request, \"/ai/image-generation\");\n}\n"]}